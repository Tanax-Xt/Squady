import { createEnv } from "@t3-oss/env-nextjs";
import { z } from "zod";

export const env = createEnv({
  client: {
    NEXT_PUBLIC_SQUADY_API_USER_USERNAME_MIN_LENGTH: z.coerce
      .number()
      .positive(),
    NEXT_PUBLIC_SQUADY_API_USER_USERNAME_MAX_LENGTH: z.coerce
      .number()
      .positive(),
    NEXT_PUBLIC_SQUADY_API_USER_USERNAME_PATTERN: z.string(),
    NEXT_PUBLIC_SQUADY_API_USER_PASSWORD_MIN_LENGTH: z.coerce
      .number()
      .positive(),
    NEXT_PUBLIC_SQUADY_API_USER_PASSWORD_MAX_LENGTH: z.coerce
      .number()
      .positive(),
    NEXT_PUBLIC_SQUADY_API_USER_PASSWORD_PATTERN: z.string(),
    NEXT_PUBLIC_SQUADY_API_USER_FULL_NAME_PATTERN: z.string(),
    NEXT_PUBLIC_SQUADY_API_USER_BIRTH_DATE_MAX_YEARS: z.coerce
      .number()
      .positive(),
    NEXT_PUBLIC_SQUADY_API_USER_BIRTH_DATE_MIN_YEARS: z.coerce
      .number()
      .nonnegative(),
    NEXT_PUBLIC_SQUADY_API_USER_CITY_MAX_LENGTH: z.coerce.number().positive(),
    NEXT_PUBLIC_SQUADY_API_USER_TELEGRAM_PATTERN: z.string(),
    NEXT_PUBLIC_SQUADY_API_USER_ABOUT_MAX_LENGTH: z.coerce.number().positive(),
    NEXT_PUBLIC_SQUADY_OTP_LENGTH: z.coerce.number(),
    NEXT_PUBLIC_SQUADY_OTP_RESEND_SECONDS: z.coerce.number(),
  },
  experimental__runtimeEnv: {
    NEXT_PUBLIC_SQUADY_API_USER_USERNAME_MIN_LENGTH:
      process.env.NEXT_PUBLIC_SQUADY_API_USER_USERNAME_MIN_LENGTH,
    NEXT_PUBLIC_SQUADY_API_USER_USERNAME_MAX_LENGTH:
      process.env.NEXT_PUBLIC_SQUADY_API_USER_USERNAME_MAX_LENGTH,
    NEXT_PUBLIC_SQUADY_API_USER_USERNAME_PATTERN:
      process.env.NEXT_PUBLIC_SQUADY_API_USER_USERNAME_PATTERN,
    NEXT_PUBLIC_SQUADY_API_USER_PASSWORD_MIN_LENGTH:
      process.env.NEXT_PUBLIC_SQUADY_API_USER_PASSWORD_MIN_LENGTH,
    NEXT_PUBLIC_SQUADY_API_USER_PASSWORD_MAX_LENGTH:
      process.env.NEXT_PUBLIC_SQUADY_API_USER_PASSWORD_MAX_LENGTH,
    NEXT_PUBLIC_SQUADY_API_USER_PASSWORD_PATTERN:
      process.env.NEXT_PUBLIC_SQUADY_API_USER_PASSWORD_PATTERN,
    NEXT_PUBLIC_SQUADY_API_USER_FULL_NAME_PATTERN:
      process.env.NEXT_PUBLIC_SQUADY_API_USER_FULL_NAME_PATTERN,
    NEXT_PUBLIC_SQUADY_API_USER_BIRTH_DATE_MAX_YEARS:
      process.env.NEXT_PUBLIC_SQUADY_API_USER_BIRTH_DATE_MAX_YEARS,
    NEXT_PUBLIC_SQUADY_API_USER_BIRTH_DATE_MIN_YEARS:
      process.env.NEXT_PUBLIC_SQUADY_API_USER_BIRTH_DATE_MIN_YEARS,
    NEXT_PUBLIC_SQUADY_API_USER_CITY_MAX_LENGTH:
      process.env.NEXT_PUBLIC_SQUADY_API_USER_CITY_MAX_LENGTH,
    NEXT_PUBLIC_SQUADY_API_USER_TELEGRAM_PATTERN:
      process.env.NEXT_PUBLIC_SQUADY_API_USER_TELEGRAM_PATTERN,
    NEXT_PUBLIC_SQUADY_API_USER_ABOUT_MAX_LENGTH:
      process.env.NEXT_PUBLIC_SQUADY_API_USER_ABOUT_MAX_LENGTH,
    NEXT_PUBLIC_SQUADY_OTP_LENGTH: process.env.NEXT_PUBLIC_SQUADY_OTP_LENGTH,
    NEXT_PUBLIC_SQUADY_OTP_RESEND_SECONDS:
      process.env.NEXT_PUBLIC_SQUADY_OTP_RESEND_SECONDS,
  },
  emptyStringAsUndefined: true,
});
